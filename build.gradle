plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2024.0.0")
}

dependencies {
    // 편의성 도구 devtool, lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // 스프링시큐리티
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-crypto'

    // JWT 처리, 버전은 참고
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'

    // mysql -> 회원정보 저장 (이메일, 아이디, 비번, 이름(?),..)
    runtimeOnly 'com.mysql:mysql-connector-j'
    // jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // 유레카 클라이언트
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    // redis, 토큰 저장 및 조회
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'redis.clients:jedis:5.1.0'

    // 리액티브 웹(spring-boot-starter-webflux) <-> MVC 웹(spring-boot-starter-web)
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // 향후 추가
    // kafka : 주문, 결제 등등 이벤트 발생시 송수신 처리 등등 비동기 구성 -> 메세징 서비스
    //         서비스간 통신용도
    // 실시간 데이터 스트리밍 처리용도
    implementation 'org.apache.kafka:kafka-streams'
    // 스프링부트에서 지원하는 카프카(브로커 및 기타 일반적 용도)
    implementation 'org.springframework.kafka:spring-kafka'
    testImplementation 'org.springframework.kafka:spring-kafka-test'

    // (*)Jackson | gson : JSON 데이터 처리 -> 데이터 형태 파싱

    // actuator
    // 모니터링, 매트릭수집(성능측정), 환경정보, 로그관리, 헬스 체크,..
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Fegin Client
    // Spring Cloud에서 제공하는 http 클라이언트
    // restful client 호출때 간편 사용을 위한 서포트 라이브러리
    // msa 내부에서 서비스간 통신시 활용됨(많이 사용)

    // 로그 -> 롬복 지원 가능 -> AOP 연동

    // 회원가입 -> 이메일 입력 -> 서비스 운영자 입장(이메일이 유효한가?)
    // -> 인증 링크를 메일로 전송 -> 본인 이메일 확인 -> 클릭 -> 인증된 유저가 됨
    // smtp 프로토콜(메일전송)을 지원하는 이메일 서비스 필요!!
    // 구글 메일 활용 -> 서비스 신청개념 -> 구글 계정 -> 보안 -> 검색(앱 비밀번호) -> 앱 생성 -> 비번발급
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: '3.0.5'
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    //




    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
